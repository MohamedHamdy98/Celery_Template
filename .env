# ========================= Celery Task Queue Config =========================
# you will change localhost to the docker container name if you are using docker compose
# container_name: rabbitmq
CELERY_BROKER_URL="amqp://minirag_user:minirag_rabbitmq_2222@localhost:5672/minirag_vhost"
# you can use redis or rabbitmq (use the same url above here.)
# container_name: redis
CELERY_RESULT_BACKEND="redis://:minirag_redis_2222@localhost:6379/0" 
# ي معناها إن سيريالايز (Serialization) المهام اللي Celery بيبعتها للـ broker (زي RabbitMQ أو Redis) هيتعمل باستخدام JSON.
CELERY_TASK_SERIALIZER="json" 
# معناه ان دا الوقت اللي لو الوركر فضل شغال علي التاسك وعدا الوقت دا يبقي فيه مشكله عندي
CELERY_TASK_TIME_LIMIT=600 
# دي معناها لما كل ووركر يطلب رساله ويستلمها طبيعي يبلغ انه استلمها فانت عندك حالتين يا هيبلغ في وقتها علطول يا هيبلغ بعد ما التاسك تخلص في البروكر بس ساعتها ممكن وركر تاني ييجي يشتغل علي نفس التاسك دي لأنه مش متبلغ للبروكر من الووركر انه التاسك اتاخدت
CELERY_TASK_ACKS_LATE=false 
# ده معناه إن Celery worker هيشتغل بـ 2 عملية (processes) أو ثريدز (حسب الـ pool) في نفس الوقت لمعالجة المهام.
CELERY_WORKER_CONCURRENCY=2 

CELERY_FLOWER_PASSWORD="celery_template_flower_2025"